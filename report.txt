Report

Initially after reading the report I planned to implement the mandatory features, as well as a couple of additional features from the non-prioritized backlog. I wanted to at least implement the feature "Account page", together with the possibility for users to edit their account details. When I was done implementing these features I wanted to keep going, and the most natural way forward was to continue with features concerning the user. It was fun working to implement these features and later on I was eager to try my luck on the Admin functionality. 

Going in to this, I wanted to split up my code into many components. One reason being it becomes difficult maintaining your components and you kind of become your own enemy and everything takes more time. Keeping your components small and "dumb" is great for reusability and also for testing purposes. I chose Redux as state manager and I wanted to keep track of the backend in different states: "admin", "games" and "auth". This made it a little bit easier when talking to the backend. This approach was also based on the idea that I wanted more components to make it easier keeping track and it also makes it a bit more readable. 

I have made a couple of test suites with Jest and React Testing Library. In the unit tests that I've done I mostly check to see if the component I'm testing is rendering successfully. I also check to see that buttons, text and textfields are present and that the navbar shows the appropriate buttons/icons and that the links work correctly. If I were to carry on with the tests, I would do similar tests for all components and move on to integration tests and a few E2E-tests. 

If we wanted this application in production, we would have to look over a few things. Assuming the backend is deployed, we would have to add API endpoints for production, right now they are only configured for localhost:5000, and of course deploy the frontend as well. I would want to add proper validation on all user input fields to stop potential malicious injections. I would also like to add more unit, integration and E2E tests. Deployment to a cloud provider could be beneficial as it can scale up or down depending on site traffic, automated backups, spin up a new server if needed, and so on. 

This project was really fun to put together!
Thank you for considering me and hope to speak to you soon again.

Kind regards,
Jonas